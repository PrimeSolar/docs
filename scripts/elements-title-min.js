class themeButton extends HTMLElement{connectedCallback(){this.innerHTML+='\n    <div id="switchyContainerRelative">\n      <div id="theme">Theme</div>\n      <div id="switchyContainerAbsolute">\n        <button id="switchy" onClick="switchyDarkTheme()" value="Theme">\n          <i class="indicator"></i>\n        </button>\n      </div>\n    </div>\n    '}}customElements.define("theme-button",themeButton);class editorButton extends HTMLElement{connectedCallback(){this.innerHTML+='\n    <div id="toggleContainerRelative">\n      <div id="edit-doc">Editor Mode</div>\n      <div id="editorModeContainerAbsolute">\n        <button id="editor-mode" onclick="editorMode()" value="Editor Mode">\n          <i class="indicator"></i>\n        </button>\n      </div>\n    </div>\n    '}}customElements.define("editor-button",editorButton);class speakButton extends HTMLElement{connectedCallback(){this.innerHTML+='\n    <div id="speakContainerRelative">\n      <div id="speakContainerAbsolute">\n        <button id="speakBtn" onclick="speak()">\n          Read Page<br/>Out Loud\n        </button>\n      </div>\n    </div>\n    '}}customElements.define("speak-button",speakButton);class screenshotButton extends HTMLElement{connectedCallback(){this.innerHTML+='\n    <div id="screenshotContainerRelative">\n      <div id="screenshotContainerAbsolute">\n        <button id="screenshotBtn">\n          Download Page<br/>As Image\n        </button>\n      </div>\n    </div>\n    '}}customElements.define("screenshot-button",screenshotButton);class menuContainer extends HTMLElement{connectedCallback(){this.innerHTML+='\n    <div id="dropdown" class="dropdown">\n      <div id="menu-container" onclick="menuToggle(this)">\n        <div id="menu-title">Menu</div>\n        <div id="menu-button">\n          <div class="bar bar1"></div>\n          <div class="bar bar2"></div>\n          <div class="bar bar3"></div>\n        </div>\n      </div>\n      <div id="container-button" class="dropdown-content">\n        <theme-button></theme-button>\n        <editor-button></editor-button>\n        <speak-button></speak-button>\n        <screenshot-button></screenshot-button>\n      </div>\n    </div>\n     '}}customElements.define("menu-container",menuContainer);const menuContainerElement=document.createElement("menu-container");document.querySelector("#container>theme-button")||document.querySelector("header").appendChild(menuContainerElement);class HomeL extends HTMLElement{connectedCallback(){this.innerHTML+='\n      <a href="https://primesolar.github.io/docs/">Real&Mate Documentation</a>\n    '}}customElements.define("home-l",HomeL);class APIRefL extends HTMLElement{connectedCallback(){this.innerHTML+='\n      <a href="https://primesolar.github.io/docs/api-reference">API Reference</a>\n    '}}customElements.define("api-ref-l",APIRefL);class NavLinksAPIRef extends HTMLElement{connectedCallback(){this.innerHTML+="\n      <nav-links>\n        <home-l></home-l> > <api-ref-l></api-ref-l>\n      </nav-links>\n    "}}customElements.define("nav-links-api-ref",NavLinksAPIRef);class NavLinksDocMainPage extends HTMLElement{connectedCallback(){this.innerHTML+="\n      <nav-links>\n        <home-l></home-l>\n      </nav-links>\n    "}}customElements.define("nav-links-doc-main-page",NavLinksDocMainPage);let headerIndex=document.getElementById("header-index");if(null!==headerIndex){let e=(new Date).getHours(),n=e>=0&&e<12?"Good Morning!":e>=12&&e<18?"Good Afternoon!":"Good Evening!";headerIndex.innerHTML=`<h1 class="title">${n}</h1>`+headerIndex.innerHTML}class logoImg extends HTMLElement{connectedCallback(){this.innerHTML='\n      <img alt="Real&Mate Logo" title="Real&Mate Logo" name="real-and-mate-logo" id="logo" src="assets/logo-transparent.jpg" />\n    '}}customElements.define("logo-img",logoImg);
